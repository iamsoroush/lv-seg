# Global
seed: 101
input_height: 128 # For resizing and model creation
input_width: 128 # For resizing and model creation
original_input_h : 112 # For reshaping in preprocessing
original_input_w : 112 # For reshaping in preprocessing
original_input_channel : 1 # For reshaping in preprocessing
n_channels : 1 # must be set in code based on dataset and task

src_code_path: 'src' # put '' if packages are in root directory of your repository
data_dir: 'assets/EchoNet-Dynamic'

# Classes
data_loader_class: dataset.DataLoaderTF # Required
model_builder_class: model.UNetBaselineBuilder # Required
preprocessor_class: dataset.PreprocessorTF # Required
augmentor_class: dataset.AugmentorTF
evaluator_class: evaluation.Evaluator

# Epochs
epochs: 2

# Batch-size
batch_size: 32

# Parameters for instantiating DataLoader
data_loader:
  target_dataset_name: "EchoNet_Dynamic"
#  dataset_dir: '/content/EchoNet-Dynamic'
#  batch_size: 8
  shuffle: True # on training data
  to_fit: True
  seed: 101
  sample_weights: [1, 10]
  dataset_features:
    stage: ["ES", "ED"]
    view: ["4CH"]

# Parameters for model-builder
model_builder:
  optimizer:
    type: "adam"
    initial_lr: 0.0001
  loss_type: "binary_crossentropy"
  metrics : ["dice_coef", "iou", "acc"]
  inference_threshold: 0.5

# Parameters for instantiating Preprocessor
preprocessor:
  normalization_type: null
  max: 255
  min: 0
  do_resizing: True
  do_normalization: True

# Parameters for instantiating augmentation
do_train_augmentation: True
do_validation_augmentation: False
augmentator:
  rotation_proba: 0.5
  rotation_range: 45
  flip_proba: 0.5

# Parameters for exporting, will be used by trainer
export:
  metric: "val_loss"
  mode: "min"
